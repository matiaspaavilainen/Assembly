.pos 0
   irmovq array, %r11     # muistipaikka 0x700
   irmovq $3, %r12        # 3
   rmmovq %r12, (%r11)
   irmovq $5, %r12        # 5
   rmmovq %r12, 8(%r11)
   irmovq $8, %r12        # 8
   rmmovq %r12, 16(%r11)
   irmovq $0, %r12        # loppunolla
   rmmovq %r12, 24(%r11)

# Rekisterit r9 - r13 vakioille ja taulukon osoitteille,
# rbp ja rsp pinolle,
# %rax = käsiteltävä luku
# %rbx = välitulos -4
# %rcx = välitulos +4
# %rdx = neliöjuuren tulos
# %rdi ja %rsi = kertolaskun luvut
# pino käytössä vain jotta aliohjelmat toimii

main:
   irmovq pino, %rbp
   irmovq pino, %rsp      # pino alustus

   irmovq $8, %r13        # vakio 8 taulukkoa varten
   irmvoq $4, %r10        # vakio
   irmovq $5, %r9         # vakio
   irmovq $0, %rdi        # aliohjelmalle parametri
   irmovq $0, %rsi        # aliohjelmalle parametri

   loop:
      mrmovq (%r11), %rax # otetaan taulukosta luku
      addq %r13, %r11     # seuraava osoite
      call fibonacci      # onko fibonacci
      irmovq $0, %r12     # vakio 0 looppaamiseen
      subq %rax, %r12     # kun saavutetaan lopetus 0, ohjelma pysähtyy ja rax = 0
      jl loop

   end:
      halt
      #rax ei ollut fibonacci, rax arvona edelleen luku jota tutkittiin


.pos 0x200
fibonacci:
   # Ensin +4 ja sen jälkeen -4, jos +4 ei ole fibonacci
   call lasku             # lasketaan kaavan mukaan 5 * x * x + 4
   # neliöjuuri rcx
   rrmovq %rdx, %rdi
   rrmovq %rdx, %rsi      # kertolasku rdx * rdx
   call kertolasku
   subq %rcx, %rdx        # rdx * rdx == rcx
   je end

   call lasku             # lasketaan kaavan mukaan 5 * x * x - 4
   # neliöjuuri rbx
   rrmovq %rdx, %rdi
   rrmovq %rdx, %rsi      # kertolasku rdx * rdx
   call kertolasku
   subq %rbx, %rdx        # rdx * rdx == rbx
   je end
   ret

.pos 0x300
lasku:                    # rcx, rbx = r9 * rax * rax +- r10
   rrmovq %rax, %rdi      # rax = rdi ja rsi kertolaskuun
   rrmovq %rax, %rdi
   call kertolasku
   rrmovq %rdx, %rcx      # siirretään kertolaskun tulos rcx
   addq %r10, %rcx        # lisätään r10 eli 4
   subq %r10, %rbx        # vähennetään 4
   ret

.pos 0x350
kertolasku:
   #rdx = rsi * rdi
   ret

.pos 0x400
pino:

.pos 0x700
array:
